plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
def flutterVersionName = localProperties.getProperty("flutter.versionName")

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "tommasoscalici.tax_code_flutter"
    compileSdk = 34

    ndkVersion "26.1.10909125"

    buildFeatures {
        buildConfig = true
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    
    kotlinOptions {
        jvmTarget = "17"
    }

    lint {
        baseline file("lint-baseline.xml")
    }


    defaultConfig {
        applicationId = "tommasoscalici.taxcode"
        minSdk = 23
        targetSdk = 34
        versionCode = (flutterVersionCode ?: "1") as Integer
        versionName = flutterVersionName ?: "1.0"
    }

    signingConfigs {
        debug {
            keyAlias = keystoreProperties['keyAliasDebug']
            keyPassword = keystoreProperties['keyPasswordDebug']
            storeFile = keystoreProperties['storeFileDebug'] ? file(keystoreProperties['storeFileDebug']) : null
            storePassword = keystoreProperties['storePasswordDebug']
        }
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }
    
    buildTypes {
        debug {
            signingConfig = signingConfigs.debug
        }
        release {
            minifyEnabled = true
            shrinkResources = true
            signingConfig = signingConfigs.release
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
    }
}

flutter {
    source = "../.."
}